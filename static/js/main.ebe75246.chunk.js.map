{"version":3,"sources":["components/Statistics/Statistics.js","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","styles","defaultProps","Section","title","children","FeedbackOptions","add","onClick","App","state","event","feedback","target","innerHTML","toLowerCase","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","ceil","this","Component","ReactDOM","render","document","getElementById"],"mappings":"4PAIIA,EAAa,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,IAAKC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,mBAC5C,OACE,mCAEID,GAAS,EACL,mDACA,qBAAIE,UAAWC,IAAf,UACA,wCAAWN,KACX,2CAAcC,KACd,wCAAWC,KACX,yCAAYC,KACZ,kDAAqBC,EAArB,aAOZL,EAAWQ,aAAe,CACxBP,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,GAWPL,QC3BAS,EATD,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACrB,OACE,oCACGD,GAAS,6BAAKA,IACdC,MCMQC,EAVO,SAAC,GAAW,IAAVC,EAAS,EAATA,IACtB,OACE,qCACE,wBAAQC,QAASD,EAAjB,kBACA,wBAAQC,QAASD,EAAjB,qBACA,wBAAQC,QAASD,EAAjB,qBCDAE,E,4MAEJC,MAAQ,CACNf,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAYPU,IAAM,SAAAI,GACJ,IAAIC,EAAWD,EAAME,OAAOC,UAAUC,cACtC,EAAKC,UAAS,SAAAC,GAAS,sBAAQL,EAAWK,EAAUL,GAAY,MAChE,EAAKM,qBACL,EAAKC,mC,EAGPD,mBAAqB,kBAAM,EAAKR,MAAMf,KAAO,EAAKe,MAAMd,QAAU,EAAKc,MAAMb,K,EAE7EsB,gCAAkC,kBAAMC,KAAKC,KAAuB,IAAlB,EAAKX,MAAMf,KAAa,EAAKuB,uB,4CAE/E,WACE,OACE,qCACE,cAAC,EAAD,CAASd,MAAK,mBAAd,SACE,cAAC,EAAD,CAAiBG,IAAKe,KAAKf,QAE7B,cAAC,EAAD,CAASH,MAAK,aAAd,SACE,cAAC,EAAD,CACET,KAAM2B,KAAKZ,MAAMf,KACjBC,QAAS0B,KAAKZ,MAAMd,QACpBC,IAAKyB,KAAKZ,MAAMb,IAChBC,MAAOwB,KAAKJ,qBACZnB,mBAAoBuB,KAAKH,6C,GAxCnBI,aAAZd,EAQGP,aAAe,GAwCTO,QCjDfe,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.ebe75246.chunk.js","sourcesContent":["import React from 'react'\nimport styles from \"./Statistics.module.css\";\nimport PropTypes from 'prop-types'\n\nlet Statistics = ({good, neutral, bad, total, positivePercentage}) => {\n  return (\n    <>\n      {\n        total <= 0\n          ? <h3>No feedback given</h3>\n          : <ul className={styles}>\n            <li>Good: {good}</li>\n            <li>Neutral: {neutral}</li>\n            <li>Bad : {bad}</li>\n            <li>Total: {total}</li>\n            <li>Positive feeds: {positivePercentage}%</li>\n          </ul>\n      }\n    </>\n  )\n}\n\nStatistics.defaultProps = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n  total: 0,\n  positivePercentage: 0\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n}\n\nexport default Statistics","import React from \"react\";\n\nlet Section = ({title, children}) => {\n  return (\n    <section>\n      {title && <h1>{title}</h1>}\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n","import React from \"react\";\n\nlet FeedbackOptions = ({add}) => {\n  return (\n    <>\n      <button onClick={add}>Good</button>\n      <button onClick={add}>Neutral</button>\n      <button onClick={add}>Bad</button>\n    </>\n  );\n};\n\nexport default FeedbackOptions;\n","import React, {Component} from 'react'\nimport Statistics from \"./Statistics\"\nimport PropTypes from \"prop-types\"\nimport Section from './Section'\nimport FeedbackOptions from './FeedbackOptions'\n\nclass App extends Component {\n  \n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  }\n  \n  static defaultProps = {\n  \n  };\n  static propTypes = {\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n  };\n  \n  add = event => {\n    let feedback = event.target.innerHTML.toLowerCase();\n    this.setState(prevState => ({ [feedback]: prevState[feedback] + 1 }))\n    this.countTotalFeedback()\n    this.countPositiveFeedbackPercentage()\n  }\n  \n  countTotalFeedback = () => this.state.good + this.state.neutral + this.state.bad\n  \n  countPositiveFeedbackPercentage = () => Math.ceil(this.state.good * 100 / this.countTotalFeedback())\n  \n  render() {\n    return (\n      <>\n        <Section title={`Leave a feedback`}>\n          <FeedbackOptions add={this.add}/>\n        </Section>\n        <Section title={`Statistics`}>\n          <Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      </>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}